@page "/"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavManager
<div class="card">
    <h4 class="card-header">Login</h4>
    <div class="card-body">
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Username</label>
                <InputText @bind-Value="model.UserName" class="form-control" />
                <ValidationMessage For="@(() => model.UserName)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="model.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => model.Password)" />
            </div>
            <button class="btn btn-primary">
                @if (loading)
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Login
            </button>
            <div class="form-group">
                <label>@errorString</label>
            </div>

        </EditForm>
    </div>
</div>

@code {
    public Models.SiteUser model = new Models.SiteUser();
    string errorString;
    bool loading = false;

    public async void OnValidSubmit()
    {
        loading = true;
        // values obviously wouldn't come from the code they'd
        // be stored in a database or config setting and encrypted
        var user = "1";
        var pass = "1";
        if (model.UserName == user && model.Password == pass)
        {
            //set the cookie
            var cookie = await JSRuntime.InvokeAsync<object>("WriteCookie.WriteCookie", "weatherforecast", "true", 1);

            errorString = null;
            loading = false;
            //navigate to weatherpage
            NavManager.NavigateTo("/admin/index");
        }
        else
        {
            var cookie = await JSRuntime.InvokeAsync<object>("WriteCookie.WriteCookie", "weatherforecast", "false", 1);
            errorString = "Sorry Incorrect Login";
            loading = false;
        }

    }
}